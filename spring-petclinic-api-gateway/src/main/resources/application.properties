spring.profiles.active=chaos-monkey
chaos.monkey.enabled=true
chaos.monkey.watcher.controller=false
chaos.monkey.watcher.restController=true
chaos.monkey.watcher.service=true
chaos.monkey.watcher.repository=true
management.endpoint.chaosmonkey.enabled=true
management.endpoint.chaosmonkeyjmx.enabled=true

# include specific endpoints
management.endpoints.web.exposure.include=*


resilience4j.timelimiter.instances.timeLimiterExp2.timeout-duration = 2s

resilience4j.retry.instances.retryExp3Delay.max-attempts=10
resilience4j.retry.instances.retryExp3Delay.wait-duration=5s
resilience4j.retry.instances.retryExp3Delay.retry-exceptions=java.lang.Exception



resilience4j.retry.instances.retryExp1.max-attempts=5
resilience4j.retry.instances.retryExp1.wait-duration=2s
resilience4j.retry.instances.retryExp1.retry-exceptions=java.lang.Exception

resilience4j.retry.instances.retryExp1Id.max-attempts=5
resilience4j.retry.instances.retryExp1Id.wait-duration=3s
resilience4j.retry.instances.retryExp1Id.retry-exceptions=java.lang.Exception

resilience4j.retry.instances.retryExp2.max-attempts=4
resilience4j.retry.instances.retryExp2.wait-duration=3s
resilience4j.retry.instances.retryExp2.enableExponentialBackoff= true
resilience4j.retry.instances.retryExp2.exponentialBackoffMultiplier= 2

resilience4j.retry.instances.retryExp3.max-attempts=10
resilience4j.retry.instances.retryExp3.wait-duration=1s
resilience4j.retry.instances.retryExp3.enableExponentialBackoff= true
resilience4j.retry.instances.retryExp3.exponentialBackoffMultiplier= 2





resilience4j.retry.metrics.legacy.enabled=true
resilience4j.retry.metrics.enabled=true

